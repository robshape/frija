# Use https://github.com/nektos/act/ to test locally.
name: Continuous Integration

on: push

env:
  DOTENV_GRAPHQL_URL: http://localhost:3000/graphql
  NODE_VERSION: 12.16.3 # Node LTS.

jobs:
  build-packages:
    name: Build packages
    runs-on: ubuntu-18.04 # Ubuntu LTS.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0

    - name: Setup Node
      uses: actions/setup-node@v1.4.2
      with:
        node-version: ${{env.NODE_VERSION}}

    - name: Install dependencies
      run: |
        npm ci
        npm run bootstrap

    # /docs/DOTENV.md
    - name: Create .env
      run: |
        echo "GRAPHQL_URL=${{env.DOTENV_GRAPHQL_URL}}" >> ./.env.prod
        cp ./.env.prod ./packages/client/configs/

    - name: Build client package
      run: npx lerna run --scope @frija/client build

    - name: Build Ethereum package
      run: npx lerna run --scope @frija/ethereum build

    - name: Build server package
      run: npx lerna run --scope @frija/server build

  lint-files:
    name: Lint files
    runs-on: ubuntu-18.04 # Ubuntu LTS.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0

    - name: Setup Node
      uses: actions/setup-node@v1.4.2
      with:
        node-version: ${{env.NODE_VERSION}}

    - name: Install dependencies
      run: |
        npm ci
        npm run bootstrap

    - name: Lint Markdown
      run: npm run lint:md

    - name: Lint Solidity
      run: npm run lint:sol

    - name: Lint Sass
      run: npm run lint:sass

    - name: Lint JavaScript
      run: npm run lint:js

  run-e2e-tests:
    name: Run e2e tests
    runs-on: ubuntu-18.04 # Ubuntu LTS.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0

    - name: Setup Node
      uses: actions/setup-node@v1.4.2
      with:
        node-version: ${{env.NODE_VERSION}}

    - name: Run e2e tests
      uses: cypress-io/github-action@v1.24.0
      with:
        browser: chrome
        config-file: ./tests/cypress.json
        start: npm run start:cluster
        wait-on: 'http://localhost:8080/'
        wait-on-timeout: 300 # Wait up to 5 minutes for cluster to start.

  run-unit-integration-tests-and-report-code-coverage:
    name: Run unit, integration tests and report code coverage
    runs-on: ubuntu-18.04 # Ubuntu LTS.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0

    - name: Setup Node
      uses: actions/setup-node@v1.4.2
      with:
        node-version: ${{env.NODE_VERSION}}

    - name: Install dependencies
      run: |
        npm ci
        npm run bootstrap

    - name: Run unit, integration tests (and create code coverage report)
      run: npm run test:coverage

    - name: Report code coverage
      uses: codecov/codecov-action@v1.0.6
      with:
        token: ${{secrets.CODECOV_TOKEN}}
