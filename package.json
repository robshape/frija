{
  "devDependencies": {
    "@babel/core": "7.2.2",
    "@babel/preset-env": "7.2.3",
    "@babel/preset-react": "7.0.0",
    "babel-jest": "23.6.0",
    "babel-loader": "8.0.5",
    "cache-loader": "2.0.1",
    "css-loader": "2.1.0",
    "dotenv-webpack": "1.6.0",
    "enzyme": "3.8.0",
    "enzyme-adapter-react-16": "1.7.1",
    "enzyme-to-json": "3.3.5",
    "eslint": "5.12.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-jsx-a11y": "6.1.2",
    "eslint-plugin-react": "7.12.3",
    "ethlint": "1.2.2",
    "html-webpack-plugin": "3.2.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "24.0.0-alpha.12",
    "node-sass": "4.11.0",
    "nodemon": "1.18.9",
    "react": "16.7.0",
    "react-dom": "16.7.0",
    "react-hot-loader": "4.6.3",
    "sass-loader": "7.1.0",
    "style-loader": "0.23.1",
    "stylelint": "9.9.0",
    "stylelint-config-standard": "18.2.0",
    "stylelint-scss": "3.5.0",
    "truffle": "5.0.1",
    "uuid": "3.3.2",
    "webpack": "4.28.4",
    "webpack-cli": "3.2.1",
    "webpack-dev-server": "3.1.14"
  },
  "private": true,
  "scripts": {
    "build:ethereum": "(cd ./src/ethereum/ && truffle compile --all)",
    "clean:cache": "rm -fr .cache-loader/",
    "deploy:ethereum": "(cd ./src/ethereum/ && truffle migrate --reset)",
    "install:certificate": "openssl req -keyout server.key -new -nodes -out server.crt -subj \"/CN=localhost\" -x509",
    "install:client": "npm install --prefix ./src/client/",
    "install:server": "npm install --prefix ./src/server/",
    "lint": "npm run lint:js && npm run lint:sass && npm run lint:sol",
    "lint:js": "eslint --ext .js,.jsx ./",
    "lint:sass": "stylelint './src/client/**/*.scss'",
    "lint:sol": "solium --dir ./src/ethereum/contracts/ --no-soliumignore",
    "postinstall": "npm run install:client && npm run install:server && npm run install:certificate && npm run clean:cache",
    "run:client": "webpack-dev-server",
    "run:ethereum": "(cd ./src/ethereum/ && truffle develop)",
    "run:server": "nodemon --watch ./src/server/ ./src/server/index.js",
    "start": "npm run run:server & npm run run:client",
    "test": "jest --config ./tests/jest.config.js",
    "test:coverage": "npm test -- --coverage"
  }
}
